version: '3.8'

services:

  nginx:
    #    build: ./.docker/nginx
    container_name: ${NAMESPACE}_nginx
    image: osioaliu/nginx
    depends_on:
      - php
    ports:
      #- "80:80"
      - "8080:80"
    environment:
      AUTH_CONFIG: ${AUTH_CONFIG}
      AUTH_USER: ${AUTH_USER}
      AUTH_PASS: ${AUTH_PASS}
      SHOPURI: ${SHOPURI}
      TZ: ${TZ}
      WORKDIR_SERVER: ${WORKDIR_SERVER}
    command: '/usr/sbin/nginx -g "daemon off; error_log /dev/stderr info;"'
    networks:
      default:
        aliases:
          - ${SHOPURI}
    working_dir: ${WORKDIR_SERVER}
    volumes:
      - .docker/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf:ro
      - app_data:${WORKDIR_SERVER}

  php:
    #    build:
    #      context: ./.docker/php
    #      args:
    #        PHP_VERSION_SET: ${PHP_VERSION_SET}
    container_name: ${NAMESPACE}_php
    image: osioaliu/php:${PHP_VERSION_SET}-fpm-bullseye
    sysctls:
      net.core.somaxconn: 65536
    working_dir: ${WORKDIR_SERVER}
    user: www
    links:
      - db
    depends_on:
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      USER: www
      TZ: ${TZ}
      WORKDIR_SERVER: ${WORKDIR_SERVER}
      COMPOSER_CACHE_DIR: /home/www/.composer
      DEPLOY_MODE: ${DEPLOY_MODE}
      ADMIN_USER: ${ADMIN_USER}
      ADMIN_PASS: ${ADMIN_PASS}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_NAME: ${ADMIN_NAME}
      ADMIN_SURNAME: ${ADMIN_SURNAME}
      MAGENTO_VERSION: ${MAGENTO_VERSION}
      SHOPURI: ${SHOPURI}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    restart: on-failure
    command: bash -c 'php-fpm -F'
    volumes:
      - redis_data_socket:/var/run/redis
      - app_data:${WORKDIR_SERVER}:delegated
      - composer_cache:/home/www/.composer:delegated
      - ${HOME}/.ssh:${HOME}/.ssh:delegated
      - .docker/php/config/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
      - .docker/php/config/php-ini-overrides.ini:/usr/local/etc/php/conf.d/php-ini-overrides.ini:ro
      - .docker/php/config/zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf:ro

  db:
    container_name: ${NAMESPACE}_db
    image: mariadb:${MARIADB_VERSION}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    healthcheck:
      test: 'mysqladmin ping -h localhost -p${MYSQL_ROOT_PASSWORD}'
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - db_data:/var/lib/mysql/
      - .docker/mysql/db_dumps:/docker-entrypoint-initdb.d
      - .docker/mysql/conf/my.cnf:/etc/mysql/my.cnf

  redis:
    container_name: ${NAMESPACE}_redis
    image: redis:alpine
    sysctls:
      net.core.somaxconn: '1024'
    entrypoint: redis-server
    command: [ "/etc/redis/redis.conf", "--appendonly", "yes" ]
    healthcheck:
      test: 'redis-cli -s /var/run/redis/redis.sock ping || exit 1'
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - redis_data_socket:/var/run/redis
      - redis_data:/data
      - ./.docker/redis/conf/redis.conf:/etc/redis/redis.conf:ro

  elasticsearch:
    #    build:
    #      context: ./.docker/elasticsearch
    #      args:
    #        ELASTICSEARCH_VERSION: ${ELASTICSEARCH_VERSION}
    container_name: ${NAMESPACE}_elasticsearch
    image: osioaliu/elasticsearch:${ELASTICSEARCH_VERSION}
    environment:
      - include_type_name=true
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1024m -Xmx1024m
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - discovery.type:single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 30s
      retries: 3
    command: bash -c 'docker-entrypoint.sh'
    volumes:
      - elastic_data:/usr/share/elasticsearch/data

  mailhog:
    container_name: ${NAMESPACE}_mailhog
    image: mailhog/mailhog:latest
    ports:
      - ${MAILHOG_EXTERNAL_PORT}:8025

  watchtower:
    container_name: ${NAMESPACE}_watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3600

  varnish:
    container_name: ${NAMESPACE}_varnish
    image: varnish:${VARNISH_VERSION}
    environment:
      - VARNISH_SIZE=2G
    tmpfs:
      - /var/lib/varnish:exec
    command: "-p default_keep=300"
    depends_on:
      - nginx
    ports:
      - "80:80"
    volumes:
      - .docker/varnish/config/default.vcl:/etc/varnish/default.vcl

#  rabbitmq:
#    container_name: ${NAMESPACE}_rabbitmq
#    image: rabbitmq:3.7-management-alpine
#    ports:
#      - "15672:15672"
#      - "5672:5672"
#    volumes:
#      - rabbitmq_data:/var/lib/rabbitmq

volumes:
  #rabbitmq_data:
  redis_data_socket:
  db_data:
  elastic_data:
  redis_data:
  composer_cache:
    external: true
  app_data:
    external: true