version: '3.8'

services:

  nginx:
    #    build: ./.docker/nginx
    container_name: ${NAMESPACE}_nginx
    image: osioaliu/nginx:bmsc
    stdin_open: true
    tty: true
    depends_on:
      - php
    ports:
      - ${WEBSERVER_UNSECURE_PORT}:${WEBSERVER_UNSECURE_PORT}
    environment:
      AUTH_CONFIG: ${AUTH_CONFIG}
      AUTH_USER: ${AUTH_USER}
      AUTH_PASS: ${AUTH_PASS}
      SHOPURI: ${SHOPURI}
      TZ: ${TZ}
      WORKDIR_SERVER: /var/www
    command: '/usr/sbin/nginx -g "daemon off; error_log /dev/stderr info;"'
    networks:
      default:
        aliases:
          - ${SHOPURI}
    working_dir: /var/www
    extra_hosts:
      - "de.amorelie.local:127.0.0.1"
      - "at.amorelie.local:127.0.0.1"
      - "ch.amorelie.local:127.0.0.1"
      - "fr.amorelie.local:127.0.0.1"
      - "be.amorelie.local:127.0.0.1"
      - "fr-ch.amorelie.local:127.0.0.1"
      - "b2b-de.amorelie.local:127.0.0.1"
      - "b2b-en.amorelie.local:127.0.0.1"
    volumes:
      - .docker/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf:ro
      - app_data:/var/www

  php:
#    build:
#      context: ./.docker/php
#      args:
#        PHP_VERSION_SET: ${PHP_VERSION_SET}
    container_name: ${NAMESPACE}_php
    image: osioaliu/php:${PHP_VERSION_SET}-fpm-buster
    stdin_open: true
    tty: true
    sysctls:
      net.core.somaxconn: 65536
    working_dir: /var/www
    user: www
    links:
      - db
    depends_on:
      - db
      - redis
      - elasticsearch
    environment:
      USER: www
      TZ: ${TZ}
      WORKDIR_SERVER: /var/www
      COMPOSER_CACHE_DIR: /home/www/.composer
    restart: on-failure
    command: >
      bash -lc 'composer selfupdate --1; /usr/local/sbin/php-fpm -F'
    volumes:
      - redis_data_socket:/var/run/redis
      - app_data:/var/www:delegated
      - composer_cache:/home/www/.composer:delegated
      - ssh_keys:/home/${USER}/.ssh:delegated
      - .docker/php/config/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini:ro
      - .docker/php/config/php-ini-overrides.ini:/usr/local/etc/php/conf.d/php-ini-overrides.ini:ro
      - .docker/php/config/zz-docker.conf:/usr/local/etc/php-fpm.d/zz-docker.conf:ro

  db:
    container_name: ${NAMESPACE}_db
    image: mariadb:${MARIADB_VERSION}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306
    volumes:
      - db_data:/var/lib/mysql/
      - .docker/mysql/db_dumps:/docker-entrypoint-initdb.d
      - .docker/mysql/conf/my.cnf:/etc/mysql/my.cnf

  redis:
    container_name: ${NAMESPACE}_redis
    image: redis:alpine
    sysctls:
      net.core.somaxconn: '1024'
    entrypoint: redis-server
    command: [ "/etc/redis/redis.conf", "--appendonly", "yes" ]
    volumes:
      - redis_data_socket:/var/run/redis
      - redis_data:/data
      - ./.docker/redis/conf/redis.conf:/etc/redis/redis.conf:ro

  elasticsearch:
    container_name: ${NAMESPACE}_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSEARCH_VERSION}
    environment:
      - include_type_name=true
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms5120m -Xmx5120m
      - http.host=0.0.0.0
      - transport.host=127.0.0.1
      - discovery.type:single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic_data:/usr/share/elasticsearch/data
    command: >
      bash -c
      '
      elasticsearch-plugin list | grep analysis-icu || elasticsearch-plugin install -b analysis-icu  &&
      elasticsearch-plugin list | grep analysis-phonetic || elasticsearch-plugin install -b analysis-phonetic &&
      docker-entrypoint.sh;
      '

  #  rabbitmq:
  #    container_name: ${NAMESPACE}_rabbitmq
  #    image: rabbitmq:3.7-management-alpine
  #    ports:
  #      - "15672:15672"
  #      - "5672:5672"
  #    volumes:
  #      - rabbitmqdata:/var/lib/rabbitmq

  mailhog:
    container_name: ${NAMESPACE}_mailhog
    image: mailhog/mailhog:latest
    ports:
      - ${MAILHOG_EXTERNAL_PORT}:8025

  watchtower:
    container_name: ${NAMESPACE}_watchtower
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 3600

volumes:
  redis_data_socket:
  db_data:
  elastic_data:
  redis_pagespeed_data:
  redis_data:
  rabbitmqdata:
  ssh_keys:
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/.ssh
  composer_cache:
    driver_opts:
      type: none
      o: bind
      device: ${HOME}/.composer
  app_data:
    driver_opts:
      type: none
      o: bind
      device: ${WORKDIR}
